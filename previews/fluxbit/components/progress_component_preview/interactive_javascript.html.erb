<div class="space-y-8" data-controller="fx-progress">
  <div data-fx-progress-progress-value="25"
       data-fx-progress-animate-value="true"
       data-fx-progress-speed-value="normal">
    <h3 class="text-lg font-semibold mb-4">Interactive Progress Bar with JavaScript Controls</h3>

    <!-- Progress bar with Stimulus controller -->
    <div class="w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700"
         data-fx-progress-target="container"
         data-progress-id="main">
      <div class="bg-blue-600 h-2.5 rounded-full transition-all duration-300 ease-out"
           data-fx-progress-target="bar"
           style="width: 25%"
           aria-valuenow="25"
           aria-valuemin="0"
           aria-valuemax="100"></div>
    </div>
    <div class="flex justify-between items-center mt-2">
      <span class="text-sm font-medium text-gray-700 dark:text-gray-300"
            data-fx-progress-target="textLabel">File Upload</span>
      <span class="text-sm font-medium text-gray-700 dark:text-gray-300"
            data-fx-progress-target="progressLabel">25%</span>
    </div>

    <!-- Control buttons -->
    <div class="mt-4 space-x-2">
      <button data-action="click->fx-progress#resetProgress"
              data-fx-progress-id-param="main"
              class="px-3 py-1 bg-gray-500 text-white rounded text-sm hover:bg-gray-600">
        Reset
      </button>
      <button data-action="click->fx-progress#increment"
              data-fx-progress-amount-param="10"
              data-fx-progress-id-param="main"
              class="px-3 py-1 bg-blue-500 text-white rounded text-sm hover:bg-blue-600">
        +10%
      </button>
      <button data-action="click->fx-progress#decrement"
              data-fx-progress-amount-param="10"
              data-fx-progress-id-param="main"
              class="px-3 py-1 bg-red-500 text-white rounded text-sm hover:bg-red-600">
        -10%
      </button>
      <button data-action="click->fx-progress#completeProgress"
              data-fx-progress-id-param="main"
              class="px-3 py-1 bg-green-500 text-white rounded text-sm hover:bg-green-600">
        Complete
      </button>
    </div>

    <!-- Animation controls -->
    <div class="mt-2 space-x-2">
      <button data-action="click->fx-progress#animateTo"
              data-fx-progress-target-param="75"
              data-fx-progress-duration-param="1500"
              data-fx-progress-id-param="main"
              class="px-3 py-1 bg-purple-500 text-white rounded text-sm hover:bg-purple-600">
        Animate to 75%
      </button>
      <button data-action="click->fx-progress#updateSpeed"
              data-fx-progress-speed-param="fast"
              data-fx-progress-id-param="main"
              class="px-3 py-1 bg-teal-500 text-white rounded text-sm hover:bg-teal-600">
        Fast Speed
      </button>
      <button data-action="click->fx-progress#updateSpeed"
              data-fx-progress-speed-param="slow"
              data-fx-progress-id-param="main"
              class="px-3 py-1 bg-cyan-500 text-white rounded text-sm hover:bg-cyan-600">
        Slow Speed
      </button>
    </div>
  </div>

  <div>
    <h3 class="text-lg font-semibold mb-4">Second Progress Bar</h3>

    <!-- Second progress bar -->
    <div class="w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700"
         data-progress-id="secondary">
      <div class="bg-green-600 h-2.5 rounded-full transition-all duration-300 ease-out"
           style="width: 50%"
           aria-valuenow="50"
           aria-valuemin="0"
           aria-valuemax="100"></div>
    </div>
    <div class="flex justify-between items-center mt-2">
      <span class="text-sm font-medium text-gray-700 dark:text-gray-300">Download</span>
      <span class="text-sm font-medium text-gray-700 dark:text-gray-300">50%</span>
    </div>

    <!-- Control buttons for second progress bar -->
    <div class="mt-4 space-x-2">
      <button data-action="click->fx-progress#resetProgress"
              data-fx-progress-id-param="secondary"
              class="px-3 py-1 bg-gray-500 text-white rounded text-sm hover:bg-gray-600">
        Reset Secondary
      </button>
      <button data-action="click->fx-progress#increment"
              data-fx-progress-amount-param="20"
              data-fx-progress-id-param="secondary"
              class="px-3 py-1 bg-green-500 text-white rounded text-sm hover:bg-green-600">
        +20%
      </button>
      <button data-action="click->fx-progress#completeProgress"
              data-fx-progress-id-param="secondary"
              class="px-3 py-1 bg-blue-500 text-white rounded text-sm hover:bg-blue-600">
        Complete Secondary
      </button>
    </div>

    <!-- Cross-control buttons (control main from here) -->
    <div class="mt-2 space-x-2">
      <button data-action="click->fx-progress#increment"
              data-fx-progress-amount-param="5"
              data-fx-progress-id-param="main"
              class="px-2 py-1 bg-purple-500 text-white rounded text-xs hover:bg-purple-600">
        +5% Main
      </button>
      <button data-action="click->fx-progress#animateTo"
              data-fx-progress-target-param="100"
              data-fx-progress-duration-param="2000"
              data-fx-progress-id-param="main"
              class="px-2 py-1 bg-orange-500 text-white rounded text-xs hover:bg-orange-600">
        Animate Main to 100%
      </button>
    </div>
  </div>

  <div class="mt-8 p-4 bg-gray-50 rounded-lg">
    <h3 class="text-lg font-semibold mb-4">Vanilla JavaScript API</h3>
    <p class="text-sm text-gray-600 mb-4">
      You can control progress bars from vanilla JavaScript using these methods:
    </p>

    <div class="space-y-2">
      <button onclick="FluxbitControllers.FxProgress.updateProgress('[data-controller]', 33)"
              class="px-3 py-1 bg-indigo-500 text-white rounded text-sm hover:bg-indigo-600">
        Set Main to 33% (JS)
      </button>

      <button onclick="FluxbitControllers.FxProgress.animateProgress('[data-controller]', 88, 1500)"
              class="px-3 py-1 bg-pink-500 text-white rounded text-sm hover:bg-pink-600">
        Animate Main to 88% (JS)
      </button>

      <button onclick="FluxbitControllers.FxProgress.updateProgressById('[data-controller]', 'secondary', (c) => c.setProgress(75))"
              class="px-3 py-1 bg-yellow-500 text-white rounded text-sm hover:bg-yellow-600">
        Set Secondary to 75% (JS)
      </button>

      <button onclick="simulateRealTimeUpdate()"
              class="px-3 py-1 bg-red-500 text-white rounded text-sm hover:bg-red-600">
        Real-time Update Demo (JS)
      </button>
    </div>

    <div class="mt-4 p-3 bg-gray-100 rounded text-xs">
      <strong>Example Code:</strong>
      <pre class="mt-2"><code>// Direct static methods
FluxbitControllers.FxProgress.updateProgress('[data-controller]', 50);
FluxbitControllers.FxProgress.animateProgress('[data-controller]', 100, 2000);

// Target specific progress bars by ID
FluxbitControllers.FxProgress.updateProgressById('[data-controller]', 'main', (controller) => {
  controller.incrementProgress(25);
});

// Get controller and call methods directly
const controller = FluxbitControllers.FxProgress.getController('[data-controller]');
controller.setProgress(60);
controller.reset();</code></pre>
    </div>
  </div>

  <script>
    // Example of real-time progress updates from vanilla JS
    function simulateRealTimeUpdate() {
      let progress = 0;
      const interval = setInterval(() => {
        progress += Math.random() * 15;

        // Update main progress bar
        FluxbitControllers.FxProgress.updateProgress('[data-controller]', Math.min(progress, 100));

        // Update secondary with different rate
        FluxbitControllers.FxProgress.updateProgressById('[data-controller]', 'secondary', (controller) => {
          controller.setProgress(Math.min(progress * 0.8, 100));
        });

        if (progress >= 100) {
          clearInterval(interval);
          // Complete both
          FluxbitControllers.FxProgress.completeProgress('[data-controller]');
          FluxbitControllers.FxProgress.updateProgressById('[data-controller]', 'secondary', (c) => c.complete());
        }
      }, 200);
    }
  </script>

</div>